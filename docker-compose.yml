services:
    traefik:
        image: traefik:latest
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.http.address=:80"
            - "--entrypoints.https.address=:443"
            - "--entrypoints.https.http.tls.certResolver=le"
            - "--certificatesresolvers.le.acme.tlschallenge=true"
            - "--certificatesresolvers.le.acme.email=you@mail.net"
            - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./opt/traefik/letsencrypt:/letsencrypt
        container_name: ${PROJECT_NAME}_traefik

    nginx:
        image: nginx:latest
        volumes:
            - ./:/var/www/
            - ./_docker/nginx/conf.d/:/etc/nginx/conf.d
            - ./_docker/ssl:/etc/nginx/certs
        depends_on:
            - app
        container_name: ${PROJECT_NAME}_nginx
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nginx.rule=Host(`${PROJECT_NAME}.localhost`)"
            - "traefik.http.services.nginx.loadbalancer.server.port=80"

    app:
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        volumes:
            - ./:/var/www/
        depends_on:
            - db
        container_name: ${PROJECT_NAME}_app

    db:
        image: postgres:13
        restart: always
        volumes:
            - ./tmp/db:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        ports:
            - 8101:5432
        container_name: ${PROJECT_NAME}_db

    pgadmin:
        image: dpage/pgadmin4
        restart: always
        depends_on:
            - db
        ports:
            - 8090:80
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        container_name: ${PROJECT_NAME}_pgadmin

networks:
    default:
        name: ${NETWORK_NAME}_proxynet
        external: true
